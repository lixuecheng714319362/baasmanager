---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  namespace: {{namespace}}
  name:	peer{{index}}-{{namespace}}
  labels:
    app: hyperledger
    role: peer
    peer-id: peer{{index}}
    org: {{namespace}}
spec:
  selector:
    matchLabels:
        app: hyperledger
        role: peer
        peer-id: peer{{index}}
        org: {{namespace}}
  replicas: 1
  minReadySeconds: 10
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: hyperledger
        role: peer
        peer-id: peer{{index}}
        org: {{namespace}}
    spec:
        containers:
        - name: peer{{index}}-{{namespace}}-couchdb
          image: hyperledger/fabric-couchdb:0.4.15
          resources:
            limits:
              cpu: "0.25"
              memory: "512Mi"
          ports:
           - containerPort: 5984
          env:
           - name: COUCHDB_USER
             value: ""
           - name: COUCHDB_PASSWORD
             value: ""
          volumeMounts:
           - mountPath: /opt/couchdb/data
             name: peerdata
             subPath: couchdb.peer{{index}}.{{namespace}}

        - name: peer{{index}}-{{namespace}}
          image: hyperledger/fabric-peer:1.4.1
          resources:
            limits:
              cpu: "0.25"
              memory: "512Mi"
          env:
           - name: CORE_LEDGER_STATE_STATEDATABASE
             value: "CouchDB"
           - name: CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS
             value: "localhost:5984"
           - name: CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME
             value: ""
           - name: CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
             value: ""
           - name: CORE_VM_ENDPOINT
             value: "unix:///host/var/run/docker.sock"
           - name: FABRIC_LOGGING_SPEC
             value: "INFO"
           - name: CORE_PEER_TLS_ENABLED
             value: "{{tls-enabled}}"
           - name: CORE_PEER_GOSSIP_USELEADERELECTION
             value: "true"
           - name: CORE_PEER_GOSSIP_ORGLEADER
             value: "false"
           - name: CORE_PEER_PROFILE_ENABLED
             value: "true"
           - name: CORE_PEER_TLS_CERT_FILE
             value: "/etc/hyperledger/fabric/tls/server.crt"
           - name: CORE_PEER_TLS_KEY_FILE
             value: "/etc/hyperledger/fabric/tls/server.key"
           - name: CORE_PEER_TLS_ROOTCERT_FILE
             value: "/etc/hyperledger/fabric/tls/ca.crt"
           - name: CORE_PEER_LISTENADDRESS
             value: "0.0.0.0:7051"
           - name: CORE_PEER_CHAINCODEADDRESS
             value: "peer{{index}}.{{namespace}}:7052"
           - name: CORE_PEER_CHAINCODELISTENADDRESS
             value: "0.0.0.0:7052"
           - name: CORE_PEER_ID
             value: "peer{{index}}.{{namespace}}"
           - name: CORE_PEER_ADDRESS
             value: "peer{{index}}.{{namespace}}:7051"
           - name: CORE_PEER_GOSSIP_EXTERNALENDPOINT
             value: "peer{{index}}.{{namespace}}:7051"
           - name: CORE_PEER_LOCALMSPID
             value: "{{mspid}}"
          workingDir: /opt/gopath/src/github.com/hyperledger/fabric/peer
          ports:
           - containerPort: 7051
           - containerPort: 7052
#           - containerPort: 7053
          command: ["peer"]
          args: ["node","start"]
          volumeMounts:
           - mountPath: /etc/hyperledger/fabric/msp
             name: certificate
             subPath: crypto-config/peerOrganizations/{{namespace}}/peers/peer{{index}}.{{namespace}}/msp
           - mountPath: /etc/hyperledger/fabric/tls
             name: certificate
             subPath: crypto-config/peerOrganizations/{{namespace}}/peers/peer{{index}}.{{namespace}}/tls
           - mountPath: /var/hyperledger/production
             name: peerdata
             subPath: peer{{index}}.{{namespace}}
           - mountPath: /host/var/run
             name: run
        volumes:
         - name: certificate
           persistentVolumeClaim:
               claimName: {{namespace}}-pv
         - name: peerdata
           persistentVolumeClaim:
               claimName: {{namespace}}-pvdata
         - name: run
           hostPath:
             path: /var/run

---
apiVersion: v1
kind: Service
metadata:
   namespace: {{namespace}}
   name: peer{{index}}
   labels:
     app: hyperledger
     role: peer
     peer-id: peer{{index}}
     org: {{namespace}}
spec:
 selector:
   app: hyperledger
   role: peer
   peer-id: peer{{index}}
   org: {{namespace}}
 type: NodePort
 ports:
   - name: endpoint
     protocol: TCP
     port: 7051
     targetPort: 7051
#     nodePort: 30051
   - name: chaincode-listen
     protocol: TCP
     port: 7052
     targetPort: 7052
   - name: couchdb
     protocol: TCP
     port: 5984
     targetPort: 5984
#     nodePort: 30052
#   - name: event-listen
#     protocol: TCP
#     port: 7053
#     targetPort: 7053
#     nodePort: 30053

